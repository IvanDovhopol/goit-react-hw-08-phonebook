{"version":3,"file":"static/js/845.edcab0db.chunk.js","mappings":"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","sources":["components/RegisterForm/styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Title = styled.h2`\n  text-align: center;\n  text-transform: uppercase;\n  color: #fff;\n`;\n\nexport const TextError = styled(ErrorMessage)`\n  font-size: ${p => p.theme.fontSizes.xs};\n  color: ${p => p.theme.colors.error};\n`;\n\nexport const RegisterRejected = styled.p`\n  color: rgba(220, 38, 38, 1);\n  font-weight: 600;\n  border: 1px solid rgba(220, 38, 38, 1);\n  border-radius: 0.5rem;\n  padding: 0.75rem 1rem;\n  background-color: rgba(254, 226, 226, 1);\n  text-align: center;\n`;\n\nexport const StyledForm = styled(Form)`\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  max-width: 400px;\n  max-width: 400px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin: ${p => p.theme.space[0]}px auto;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  font-family: ${p => p.theme.fonts.regular};\n  width: 100%;\n  border-radius: ${p => p.theme.radii.normal};\n  border: transparent;\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  background-color: rgb(225, 225, 225);\n\n  :active {\n    transition: 0.3s all;\n    top: 2px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  line-height: ${p => p.theme.lineHeights.body};\n  text-align: left;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  margin-top: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  background-color: rgb(68, 18, 232);\n  color: ${p => p.theme.colors.white};\n  text-transform: uppercase;\n  border: ${p => p.theme.borders.none};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  letter-spacing: 2px;\n  display: block;\n  appearance: none;\n  border-radius: ${p => p.theme.radii.normal};\n  width: 100%;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  letter-spacing: 0.5rem;\n  transition: 0.3s all;\n  cursor: pointer;\n\n  :hover {\n    background-color: rgb(41, 4, 164);\n  }\n\n  :active {\n    transition: 0.3s all;\n    top: 2px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { register } from 'redux/auth/operations';\nimport { selectError, selectUser, selectLoading } from 'redux/auth/selectors';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  TextError,\n  StyledForm,\n  Label,\n  Button,\n  Input,\n  Title,\n  RegisterRejected,\n} from './styled';\n\nconst schema = Yup.object({\n  name: Yup.string().required().min(3).max(25),\n  email: Yup.string().required().email().min(13).max(30),\n  password: Yup.string().required().min(7).max(25),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const data = useSelector(selectUser);\n  const isLoading = useSelector(selectLoading);\n\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    if (data.name || data.email !== null) {\n      dispatch(register({ name, email, password }));\n      return resetForm();\n    }\n    dispatch(register({ name, email, password }));\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <Title>Registration</Title>\n          {error && <RegisterRejected>Invalid credentials.</RegisterRejected>}\n\n          <Label>\n            Name\n            <Input type=\"text\" name=\"name\" />\n            <TextError name=\"name\" component=\"div\" />\n          </Label>\n          <Label>\n            Email\n            <Input type=\"email\" name=\"email\" />\n            <TextError name=\"email\" component=\"div\" />\n          </Label>\n          <Label>\n            Password\n            <Input type=\"password\" name=\"password\" />\n            <TextError name=\"password\" component=\"div\" />\n          </Label>\n          <div>\n            <p>\n              Already have an account? <NavLink to=\"/login\">Log in</NavLink>.\n            </p>\n          </div>\n\n          <Button type=\"submit\">{isLoading ? 'Loading...' : 'register'}</Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Title","styled","TextError","ErrorMessage","p","theme","fontSizes","xs","colors","error","RegisterRejected","StyledForm","Form","fontWeights","bold","space","Input","Field","fonts","regular","radii","normal","m","Label","lineHeights","body","white","Button","borders","none","schema","Yup","name","required","min","max","email","password","initialValues","RegisterForm","dispatch","useDispatch","useSelector","selectError","data","selectUser","isLoading","selectLoading","validationSchema","onSubmit","resetForm","register","type","component","to","Register","Helmet"],"sourceRoot":""}